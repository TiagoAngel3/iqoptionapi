import pandas as pd
import numpy as np

def ema(data, window):
    return data.ewm(span=window, min_periods=0, adjust=False).mean()

def rsi(data, window):
    delta = data.diff()
    gain = (delta.where(delta > 0, 0)).rolling(window=window).mean()
    loss = (-delta.where(delta < 0, 0)).rolling(window=window).mean()
    rs = gain / loss
    return 100 - (100 / (1 + rs))

def detect_crossing(df, short_window, long_window, rsi_window):
    df['Short_EMA'] = ema(df['Close'], short_window)
    df['Long_EMA'] = ema(df['Close'], long_window)
    df['Short_RSI'] = rsi(df['Close'], short_window)
    df['Long_RSI'] = rsi(df['Close'], long_window)
    df['Signal'] = np.where(df['Short_EMA'] > df['Long_EMA'], "BUY", "SELL")
    df['Crossing'] = df['Signal'].diff()
    df['RSI_Signal'] = np.where(df['Short_RSI'] > df['Long_RSI'], "BUY", "SELL")
    df['Confluence'] = np.where((df['Crossing'] == 'BUY') & (df['RSI_Signal'] == 'BUY'), "BUY", 
                                np.where((df['Crossing'] == 'SELL') & (df['RSI_Signal'] == 'SELL'), "SELL", "NO TRADE"))
    return df

# Exemplo de uso:
# Carregar dados de preço (Open, High, Low, Close) e volume em um DataFrame pandas
# df = ...

# Definir janelas para as MMEs curta e longa e para o RSI
short_window = 20
long_window = 50
rsi_window = 14

# Detectar cruzamentos de MMEs, calcular o RSI e adicionar informações de volume e preço
df = detect_crossing(df, short_window, long_window, rsi_window)

# Visualizar os sinais de cruzamento, o RSI, volume e preço, e a confluência de sinais
print(df[['Close', 'Short_EMA', 'Long_EMA', 'Crossing', 'RSI', 'Volume', 'Open', 'High', 'Low', 'Confluence']])
